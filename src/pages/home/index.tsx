'use client'

import TransitionPane from '@/components/transition/pane'
import Page from '@/components/ui/page'
import Head from 'next/head'

import React, {
  DetailedHTMLProps,
  HTMLAttributes,
  useRef,
  useState,
} from 'react'
import { useScrollToTop } from '@/lib/hooks'
import TextReveal from '@/components/ui/text-reveal'
import { cn, getYear } from '@/lib/utils'
import Barcode from '@/components/misc/barcode'
import TextRevealByChar from '@/components/ui/text-reveal-char'
import Link from 'next/link'

const TextEntry = ({
  leftSide = [],
  rightSide = [],
  leftSideUrl,
  rightSideUrl,
  delay = 0,
  className,
  ...props
}: DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {
  leftSide?: Array<string>
  rightSide?: Array<string>
  leftSideUrl?: string
  rightSideUrl?: string
  delay?: number
}) => {
  return (
    <div
      className={cn(
        'flex flex-col min-[390px]:flex-row *:w-full relative',
        className,
      )}
      {...props}
    >
      <div>
        {leftSideUrl ? (
          <Link href={leftSideUrl!}>
            {leftSide.map((textEntries, index) => {
              return (
                <TextReveal
                  key={index}
                  as={'span'}
                  lineHeight={'0.9em'}
                  enterY={'10%'}
                  className={'-mb-3.5 pb-0'}
                  typeClass={'typography-caps-sm mr-0.5'}
                  text={textEntries}
                  delay={delay * index * 0.075}
                />
              )
            })}
          </Link>
        ) : (
          <React.Fragment>
            {leftSide.map((textEntries, index) => {
              return (
                <TextReveal
                  key={index}
                  as={'span'}
                  lineHeight={'0.9em'}
                  enterY={'10%'}
                  className={'-mb-3.5 pb-0'}
                  typeClass={'typography-caps-sm mr-0.5'}
                  text={textEntries}
                  delay={delay * index * 0.075}
                />
              )
            })}
          </React.Fragment>
        )}
      </div>
      <div>
        {rightSideUrl ? (
          <Link href={rightSideUrl!}>
            {rightSide.map((textEntries, index) => {
              return (
                <TextReveal
                  key={index}
                  as={'span'}
                  lineHeight={'0.9em'}
                  enterY={'10%'}
                  className={'-mb-3.5 pb-0'}
                  typeClass={'typography-caps-sm mr-0.5'}
                  text={textEntries}
                  delay={delay * index * 0.175}
                />
              )
            })}
          </Link>
        ) : (
          <React.Fragment>
            {rightSide.map((textEntries, index) => {
              return (
                <TextReveal
                  key={index}
                  as={'span'}
                  lineHeight={'0.9em'}
                  enterY={'10%'}
                  className={'-mb-3.5 pb-0'}
                  typeClass={'typography-caps-sm mr-0.5'}
                  text={textEntries}
                  delay={delay * index * 0.175}
                />
              )
            })}
          </React.Fragment>
        )}
      </div>
    </div>
  )
}

const Home = () => {
  const [mouseHover, setMouseHover] = useState(false)
  const paneRef = useRef<HTMLDivElement>(null)
  const page = useRef<HTMLElement>(null)
  useScrollToTop()

  const onMouseEnter = () => {
    setMouseHover(true)
  }

  const onMouseLeave = () => {
    setMouseHover(false)
  }

  return (
    <React.Fragment>
      <Head>
        <title>GeorgeCht</title>
        <meta name={'description'} content={'Generated by create next app'} />
        <meta
          name={'viewport'}
          content={'width=device-width, initial-scale=1'}
        />
        <link rel={'icon'} href={'/favicon.ico'} />
      </Head>

      <TransitionPane ref={paneRef}>
        <Page className={'justify-end'} ref={page}>
          <div
            className={cn(
              'md:absolute flex flex-col left-0 -top-3 transition-opacity mt-14 md:mt-0',
              mouseHover ? 'opacity-0' : 'opacity-100',
            )}
          >
            <TextRevealByChar
              as={'h2'}
              lineHeight={'1.195em'}
              delay={0}
              enterY={'22.125%'}
              className={'ml-1 pl-6'}
              typeClass={'typography-display-intro'}
              text={`↙`}
            />
            <TextRevealByChar
              as={'h1'}
              lineHeight={'1.195em'}
              delay={0.125}
              enterY={'22.125%'}
              className={'ml-1 pl-6 -mt-[2.375vw]'}
              typeClass={'typography-display-intro'}
              text={`George`}
            />
            <TextRevealByChar
              as={'h2'}
              lineHeight={'1.195em'}
              delay={0.25}
              enterY={'22.125%'}
              className={'ml-1 pl-6 -mt-[2.375vw]'}
              typeClass={'typography-display-intro'}
              text={`Cht©${getYear()}`}
            />
              <TextRevealByChar
                as={'h2'}
                lineHeight={'1.195em'}
                delay={0.375}
                enterY={'22.125%'}
                className={'ml-1 pl-6 -mt-[2.375vw]'}
                typeClass={'typography-display-intro'}
                text={`George`}
              />
              <TextRevealByChar
                as={'h2'}
                lineHeight={'1.195em'}
                delay={0.5}
                enterY={'22.125%'}
                className={'ml-1 pl-6 -mt-[2.375vw]'}
                typeClass={'typography-display-intro'}
                text={`Cht©${getYear()}`}
              />
          </div>
          <div
            className={
              'flex flex-col md:flex-row gap-10 md:gap-0 justify-between relative w-full p-2 pt-16 md:pt-0'
            }
          >
            <div
              className={'flex flex-col gap-10 md:gap-20 w-full md:w-[468px]'}
              onMouseEnter={onMouseEnter}
              onMouseLeave={onMouseLeave}
            >
              <TextEntry leftSide={['Intro', 'section']} />
              <Link href={'/contact'}>
                <TextEntry
                  leftSide={[
                    'Working at the intersection',
                    'of web development & design',
                  ]}
                  rightSide={['Available for new', 'projects from may 2024']}
                />
              </Link>

              <Link href={'/about'}>
                <TextEntry
                  delay={0.125}
                  leftSide={['About', 'George']}
                  rightSide={[
                    'George chatziiordanou is a ',
                    'greece based front-end',
                    'developer & web designer, with',
                    'over 8 years of experience',
                    'from freelancing to working',
                    'with agencies',
                  ]}
                />
              </Link>

              <Link href={'/cv'}>
                <TextEntry
                  delay={0.25}
                  leftSide={['design', 'software']}
                  rightSide={[
                    'figma',
                    'adobe photoshop',
                    'adobe illustrator',
                    'adobe after effects',
                    'adobe premiere',
                    'fontlab',
                  ]}
                />
              </Link>
              <Link href={'/cv'}>
                <TextEntry
                  delay={0.375}
                  leftSide={['tech', 'stack']}
                  rightSide={[
                    'html/css/js',
                    'nodejs',
                    'react',
                    'nextjs',
                    'tailwind',
                    'wordpress',
                    'git',
                  ]}
                />
              </Link>
              <div className={'hidden md:flex'}>
                <Barcode width={104} height={56} delay={0.985} />
              </div>
            </div>
            <div
              className={'flex flex-col gap-10 md:gap-20 w-full md:w-[468px]'}
            >
              <TextEntry
                leftSide={['Selected', 'Projects']}
                rightSide={['↙']}
              />
              <TextEntry
                delay={0.125}
                leftSideUrl={'/project/anonyma'}
                leftSide={[
                  'anonyma web app',
                  'self-initiated',
                  'ui/ux design',
                  'front-end dev',
                  ' ',
                  '2024',
                ]}
                rightSideUrl={'/project/craftcom-neue'}
                rightSide={[
                  'craftcom neue',
                  'self-initiated',
                  'typeface design',
                  'graphic design',
                  ' ',
                  '2023-2024',
                ]}
              />
              <TextEntry
                delay={0.25}
                leftSideUrl={'/project/product-evo'}
                leftSide={[
                  'product evo',
                  'for productevo ltd.',
                  'web design',
                  ' ',
                  '2022',
                ]}
                rightSideUrl={'/project/netactuate'}
                rightSide={[
                  'netactuate',
                  'for netactuate, inc.',
                  'ui/ux design',
                  'concept design',
                  ' ',
                  '2023',
                ]}
              />
              <TextEntry
                delay={0.375}
                leftSideUrl={'/project/anassa'}
                leftSide={[
                  'anassa general',
                  'for anassa general',
                  'web design',
                  'wordpress dev',
                  ' ',
                  '2023',
                ]}
                rightSideUrl={'/project/webshark'}
                rightSide={[
                  'webshark',
                  'via 99designs',
                  'web design',
                  'motion design',
                  ' ',
                  '2021',
                ]}
              />

              <div className={'flex md:hidden'}>
                <Barcode width={104} height={56} delay={0.325} />
              </div>
            </div>
          </div>
        </Page>
      </TransitionPane>
    </React.Fragment>
  )
}

export default Home
